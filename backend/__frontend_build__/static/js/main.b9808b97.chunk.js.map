{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","bills","setBills","useMountEffect","fetch","then","response","json","Table","striped","bordered","map","bill","file","name","title","status","body","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOA2CeA,MAtCf,WAAgB,IAAD,EACaC,mBAAc,MAD3B,mBACNC,EADM,KACCC,EADD,KAUb,OARAC,aAAe,WACbC,MAAM,UACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACJJ,EAASI,SAKb,eAACE,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAAvB,UACE,gCACE,+BACE,sCAGA,sCACA,uCACA,wCACA,2CAGJ,gCACGT,GAASA,EAAMU,KAAI,SAACC,GAAD,OAClB,+BACE,6BAAKA,EAAKC,OACV,6BAAKD,EAAKE,OACV,6BAAKF,EAAKG,QACV,6BAAKH,EAAKI,SACV,6BAAKJ,EAAKK,mBCrBPC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b9808b97.chunk.js","sourcesContent":["import { useState } from 'react';\nimport useMountEffect from '@restart/hooks/useMountEffect';\nimport Table from 'react-bootstrap/Table';\nimport './App.css';\n\nfunction App() {\n  const [bills, setBills] = useState<any>(null);\n  useMountEffect(() => {\n    fetch(\"/bills\")\n      .then(response => response.json())\n      .then(response => {\n        setBills(response);\n    });\n  });\n\n  return (\n    <Table striped bordered>\n      <thead>\n        <tr>\n          <th>\n            File\n          </th>\n          <th>Name</th>\n          <th>Title</th>\n          <th>Status</th>\n          <th>Body</th>\n        </tr>\n      </thead>\n      <tbody>\n        {bills && bills.map((bill: any) => (\n          <tr>\n            <td>{bill.file}</td>\n            <td>{bill.name}</td>\n            <td>{bill.title}</td>\n            <td>{bill.status}</td>\n            <td>{bill.body}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}